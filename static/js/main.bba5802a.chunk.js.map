{"version":3,"sources":["views/Login/Login.js","components/Menu.js","views/Dashboard/Dashboard.js","reportWebVitals.js","index.js"],"names":["App","className","to","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","CustomizedMenus","React","useState","anchorEl","setAnchorEl","fontSize","style","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","ListItemIcon","ListItemText","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","Login","document","getElementById"],"mappings":"8LAYeA,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,uCACA,cAAC,IAAD,CAAMC,GAAG,IAAT,sB,+HCIAC,EAAaC,YAAW,CAC5BC,MAAO,CACLC,OAAQ,sBAFOF,EAIhB,SAAAG,GAAK,OACN,cAACC,EAAA,EAAD,aACEC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVN,OAIFQ,EAAiBX,aAAW,SAAAY,GAAK,MAAK,CAC1CC,KAAM,CACJ,UAAW,CACTC,gBAAiBF,EAAMG,QAAQC,QAAQC,KACvC,sDAAuD,CACrDC,MAAON,EAAMG,QAAQI,OAAOC,YALbpB,CASnBqB,KAEW,SAASC,IACtB,MAAgCC,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAUA,OACE,gCACE,cAAC,IAAD,CACER,MAAM,UACNS,SAAS,QACTC,MAAO,CAAEV,MAAO,SAChBW,QAdc,SAAAC,GAClBJ,EAAYI,EAAMC,kBAgBhB,eAAChC,EAAD,CACEiC,GAAG,kBACHP,SAAUA,EACVQ,aAAW,EACXC,KAAMC,QAAQV,GACdW,QAlBc,WAClBV,EAAY,OAYV,UAOE,eAACf,EAAD,WACE,cAAC0B,EAAA,EAAD,UACE,cAAC,IAAD,CAAWT,MAAO,CAAED,SAAU,QAEhC,cAACW,EAAA,EAAD,CAActB,QAAQ,gBAExB,eAACL,EAAD,WACE,cAAC0B,EAAA,EAAD,UACE,cAAC,IAAD,CAAUT,MAAO,CAAED,SAAU,QAE/B,cAACW,EAAA,EAAD,CAActB,QAAQ,eAExB,eAACL,EAAD,WACE,cAAC0B,EAAA,EAAD,UACE,cAAC,IAAD,CAAeT,MAAO,CAAED,SAAU,QAEpC,cAACW,EAAA,EAAD,CAActB,QAAQ,qBCzEjBuB,MATf,WACE,OACE,sBAAK1C,UAAU,YAAf,UACE,2CACA,cAACyB,EAAD,QCKSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAAC,EAAD,aAKRE,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.bba5802a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Login</h1>\n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport EmailIcon from '@material-ui/icons/Email';\nimport NoteIcon from '@material-ui/icons/Note';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem);\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <MenuIcon\n        color=\"primary\"\n        fontSize=\"large\"\n        style={{ color: 'black' }}\n        onClick={handleClick}\n      />\n\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemIcon>\n            <EmailIcon style={{ fontSize: 25 }} />\n          </ListItemIcon>\n          <ListItemText primary=\"Messages\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <NoteIcon style={{ fontSize: 25 }} />\n          </ListItemIcon>\n          <ListItemText primary=\"Adverts\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <ExitToAppIcon style={{ fontSize: 25 }} />\n          </ListItemIcon>\n          <ListItemText primary=\"Log out\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}\n","import React from 'react';\nimport CustomizedMenus from '../../components/Menu';\n\nfunction Dashboard() {\n  return (\n    <div className=\"Dashboard\">\n      <h1>Dashboard</h1>\n      <CustomizedMenus></CustomizedMenus>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './views/Login';\nimport Dashboard from './views/Dashboard';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}